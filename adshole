#!/bin/bash
# Name: adshole
# Description: An easy to use script that will download various files to transform
# into a dnsmasq config file or a hosts file for your OS
OPT="${1}"

# Temporary Master list
ADSHOLE_TMP="/tmp/adshole-tmp"
# Final Master list, after everything is sorted and uniqe
MASTER="/tmp/adshole-master"

# Variable that holds the list of files to use for our transformation, can be added
LIST="http://mirror1.malwaredomains.com/files/justdomains
http://mirror1.malwaredomains.com/files/immortal_domains.txt
http://sysctl.org/cameleon/hosts
https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist
https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
https://s3.amazonaws.com/lists.disconnect.me/simple_malware.txt
https://s3.amazonaws.com/lists.disconnect.me/simple_malvertising.txt
https://hosts-file.net/ad_servers.txt
https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/win10/spy.txt
https://raw.githubusercontent.com/quidsup/notrack/master/trackers.txt
https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
https://raw.githubusercontent.com/CHEF-KOCH/NSABlocklist/master/HOSTS.txt
https://pgl.yoyo.org/as/serverlist.php?showintro=0;hostformat=hosts
https://www.malwaredomainlist.com/hostslist/hosts.txt
http://winhelp2002.mvps.org/hosts.txt
http://someonewhocares.org/hosts/zero/
http://www.malwaredomainlist.com/hostslist/hosts.txt"

# Unfortunately some sites only use zip files, so we must unzip them and use a temp file.
ZIP_LIST="http://crimeflare.net:82/domains/ad-farm.zip
http://crimeflare.net:82/domains/ipout.zip"

if [ -f ${MASTER} ];then
	rm -rf ${MASTER}
fi

ZIP_TRAN() {
	if [ ${TYPE} = "DNSMASQ" ] && [ ! -z ${ZIP_LIST} ]; then
		for i in ${ZIP_LIST}; do
			FILE=$(echo /tmp/$(basename "${i}"))
			echo ${i}
			wget -q ${i} -O ${FILE}
			unzip -p ${FILE} | egrep -v "<.*>|127.0.0.1 localhost|=" | sed -e 's/\t/ /g' -e 's/#.*$//g' -e '/^$/d' |\
			cut -d " " -f2- | cut -d " " -f1 |sed -e "s/[[:space:]]\+//g"  -e 's/^/server=\//' -e 's/$/\//' >> $ADSHOLE_TMP

			rm ${FILE}
		done
	elif [ ${TYPE} = "HOSTS" ] && [ ! -z ${ZIP_LIST} ]; then
		for i in ${ZIP_LIST}; do
			FILE=$(echo /tmp/$(basename "${i}"))
			echo ${i}
			wget -q ${i} -O ${FILE}
			unzip -p ${FILE} | egrep -v "<.*>|127.0.0.1 localhost|=" | sed -e 's/\t/ /g' -e 's/#.*$//g' -e '/^$/d' |\
			cut -d " " -f2- | cut -d " " -f1 | sed -e "s/[[:space:]]\+//g" -e 's/^/0.0.0.0 /' >> $ADSHOLE_TMP
			rm ${FILE}
		done
	fi

}

HOSTS_TRAN() {
	if [ ${TYPE} = "DNSMASQ" ] && [ ! -z ${LIST} ]; then
		# Apparently its too abstract to put sed commands in a variable then call the variable as arguments for sed.
		# So it makes it harder for a person to add to the script for other formats, we also have extra code that is useless
		#SED_CMD="-e 's/^/server=\//' -e 's/$/\//'"
		# Walk through the list, output to stdout, clean whitespaces and garbage, then transform to file format
		for i in ${LIST}; do
			echo ${i}
			wget -q ${i} -O - | egrep -v "<.*>|127.0.0.1 localhost|=" | sed -e 's/\t/ /g' -e 's/#.*$//g' -e '/^$/d' |\
			cut -d " " -f2- | cut -d " " -f1 | sed -e "s/[[:space:]]\+//g"  -e 's/^/server=\//' -e 's/$/\//' >> $ADSHOLE_TMP
		done
	elif [ ${TYPE} = "HOSTS" ] && [ ! -z ${LIST} ]; then
		# Use 0.0.0.0 because we dont want to overload localhost
		for i in $LIST; do
			echo $i
			wget -q $i -O - | egrep -v "<.*>|127.0.0.1 localhost|=" | sed -e 's/\t/ /g' -e 's/#.*$//g' -e '/^$/d' | cut -d " " -f2- | cut -d " " -f1 | sed -e "s/[[:space:]]\+//g" -e 's/^/0.0.0.0 /' >> $ADSHOLE_TMP
		done
	fi

	if [ -f ${ADSHOLE_TMP} ]; then
		sort -u ${ADSHOLE_TMP} | tail -n +4 > ${MASTER}

		sleep 2s && rm ${ADSHOLE_TMP}
	fi
}

USAGE() {

        echo """
$(basename $0): - Pull in lists from various websites converts to dnsmasq format or host file
	Usage: $(basename $0)  OPTION

OPTION

	-h      print this help message

	-m	creates a master list for dnsmasq

	-M	creates a master list for the OS's host file
"""

}




case ${OPT} in

	"-h") USAGE;;

	"-m") TYPE="DNSMASQ"; ZIP_TRAN; HOSTS_TRAN;;

	"-M") TYPE="HOSTS"; ZIP_TRAN; HOSTS_TRAN;;

	*) USAGE;;

esac
