#!/bin/bash
# Name: adshole
# Description: An easy to use script that will download various files to transform
# into a dnsmasq config file or a hosts file for your OS

#which wget 2>&1 > /dev/null && dl_cmd="wget -qO-" || dl_cmd="curl -Ss"



# Replace all alias usage with functions
sed_cmd_1() { sed -e 's/\t/ /g' -e 's/#.*$//g' -e '/^$/d' -e 's/||//g' -e 's/\^//g'; }

# Only one of these sed commands is used for sed_cmd_2
# Use 0.0.0.0 because we dont want to overload localhost or
# interfere with http servers on the host machine
sed_cmd_hosts() { sed -e 's/[[:space:]]\+//g' -e 's/^/0.0.0.0 /'; }
sed_cmd_dnsmasq() { sed -e 's/[[:space:]]\+//g' -e 's/^/server=\//' -e 's/$/\//'; }


dlcmd()
{
	local host="$1"
	local file="$2"

	if [[ $(which wget 2>/dev/null) ]]; then
		[[ $UID == 0 ]] && sudo -Eu \#1000 wget -q --timeout=10 --tries=1 "$host" -O "$file" || wget -q --timeout=10 --tries=1 "$host" -O "$file"
	else
		[[ $UID == 0 ]] && sudo -Eu \#1000 curl -s --max-time 10 --retry 1 "$host" -o "$file" || curl -s --max-time 10 --retry 1 "$host" -o "$file"
	fi
}

# Unfortunately some sites only use zip files, so we must unzip them and use a temp file.
zip_tran()
{
	local host="$1"
	local file=$(echo /tmp/$(basename "$host"))
	dlcmd "$host" "$file"
	unzip -p "$file" | egrep -v "<.*>|127.0.0.1 localhost|=" | sed_cmd_1 |\
	cut -d " " -f2- | cut -d " " -f1 | "$sed_cmd_2" >> "$master"
	rm "$file"
}

# Transform text files
text_tran()
{
	local host="$1"
	# output to stdout, clean whitespaces and garbage, then transform to file format
	dlcmd "$host" - | egrep -v "<.*>|127.0.0.1 localhost|=" | sed_cmd_1 |\
	cut -d " " -f2- | cut -d " " -f1 | "$sed_cmd_2" >> "$master"
}

download()
{
	for url in "$@"; do
		grep -zqiF .zip <(basename "$url") && zip_tran "$url" || text_tran "$url"
	done
	sort -u "$master" -o "$master"
}

adshole()
{
	case $1 in
		dnsmasq) master="/tmp/dnsmasq_adshole.conf"; sed_cmd_2=sed_cmd_dnsmasq;;
		hosts)   master="/tmp/hosts_adshole"; sed_cmd_2=sed_cmd_hosts;;
		*)       echo "Please choose between 'dnsmasq' or 'hosts'"; return 1;;
	esac
	shift
	download $@
}

usage() {
	local name="${0##*/}"
        echo """
$name: - Pull in lists from various websites and converts them to dnsmasq format or host file
	Usage: $name  OPTION

OPTION

	-h      print this help message

	-m	creates a master list for dnsmasq

	-M	creates a master list for the OS's host file
"""
	exit 1
}

[[ "${BASH_SOURCE[0]}" == "$0" ]] && \
case $1 in
	"-m")   master="/tmp/dnsmasq_adshole.conf"; shift; sed_cmd_2=sed_cmd_dnsmasq;;
	"-M")   master="/tmp/hosts_adshole"; shift; sed_cmd_2=sed_cmd_hosts;;
	"-h"|*) usage;;
esac && download $@

