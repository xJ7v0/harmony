#!/bin/bash
load_plugin iptables

# Change if necessary
LAN="eth0"

flush "DEFAULT LOG"

# block invalid packets and port scanning
prerouting_security

# Allow localhost unrestricted
default_lo

# If you need your user to browse the internet, can use namees too
#acl $LAN 0.0.0.0/0 80 1000:1000 tcp
#acl $LAN 0.0.0.0/0 443 1000:1000 tcp

# Or if you need to define a port range, 5000 through 6000
#acl $LAN 0.0.0.0/0 5000:6000 user:group udp

# Or if you want your user to allow use a domain name for one port
#acl $LAN termbin.com 9999 1000:1000 tcp

# ssh trusted IPs
#ssh_ips=( 192.168.1.1 192.168.1.2 192.168.1.3 )

# Allow SSH
#for i in "${ssh_ips[@]}"; do input $LAN $i 22 tcp; done

# Allow internet for LAN clients
#OLD_IFS="$IFS"
#IFS=$'\n'
#for i in $(egrep -vi "^#|^$" /etc/ethers); do
#	line="${i%%#*}"
#	mac="${line%%[[:space:]]*}"
#	host="${line#*[[:space:]]}"
#
#	input $LAN $host 53 tcp $mac
#	input $LAN $host 53 udp $mac
#	forward $LAN $host $WAN 0.0.0.0/0 80  tcp $mac
#	forward $LAN $host $WAN 0.0.0.0/0 443 tcp $mac
#done
#IFS="$OLD_IFS"
#
# Allow dnsmasq to use google dns
#acl $WAN 8.8.8.8 53 dnsmasq dnsmasq tcp
#acl $WAN 8.8.8.8 53 dnsmasq dnsmasq udp

# Numbers are based on severity, using
# 1 will flood your tty console
# 4 is a safe choice, will flood dmesg
# check /var/log/kern.log and/or /var/log/messages
#LOGGING_PREROUTING=0
#LOGGING_LAN=0
#LOGGING_WAN=0
#LOGGING_FORWARD=0
#LOGGING_POSTROUTING=0

### THESE MUST BE AT THE VERY BOTTOM!!! ###
# Enables logging, if all values are set to 0, this does nothing
log

# Apply the changes
apply

# Finally save iptables state
save
